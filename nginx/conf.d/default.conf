upstream web {
    server web:8000;
}

# HTTP-блок: перенаправляет HTTP на HTTPS и служит для Certbot
server {
    listen 80;
    server_name baizhigit-mebel.kz www.baizhigit-mebel.kz; # Ваши домены

    location /.well-known/acme-challenge/ {
        root /var/www/certbot; # Это путь внутри контейнера Nginx
    }

    # Все остальные HTTP-запросы перенаправляем на HTTPS
    location / {
        return 301 https://$host$request_uri;
    }

    # Обработка ошибок (можно оставить или удалить, если не используете)
    error_page 500 502 503 504 /500.html;
    location = /500.html {
        root /usr/share/nginx/html;
    }
}

# HTTPS-блок: основной блок для вашего сайта
server {
    listen 443 ssl;
    server_name baizhigit-mebel.kz www.baizhigit-mebel.kz; # Ваши домены

    # Пути к сертификатам, выданным Certbot
    # Убедитесь, что 'baizhigit-mebel.kz' соответствует вашему основному домену
    ssl_certificate /etc/letsencrypt/live/baizhigit-mebel.kz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/baizhigit-mebel.kz/privkey.pem;

    # Рекомендуемые настройки SSL для безопасности
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Включаем HSTS (HTTP Strict Transport Security)
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"; # Раскомментировать после успешной настройки HTTPS

    charset utf-8;
    client_max_body_size 75M; # Увеличиваем лимит на размер загружаемых файлов

    # Проксирование запросов к Gunicorn
    location / {
        proxy_pass http://web; # 'web' - это имя вашего сервиса Django в docker-compose
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # Важно для Django, чтобы он знал, что запрос по HTTPS
        proxy_redirect off;
    }

    # Обработка ошибок (можно оставить или удалить)
    error_page 500 502 503 504 /500.html;
    location = /500.html {
        root /usr/share/nginx/html;
    }
}
















# upstream web {
#     server web:8000;
# }

# server {
#     listen 80;
#     server_name localhost baizhigit-mebel.kz www.baizhigit-mebel.kz; # Пока используем _, позже заменим на ваш_домен или IP
#     charset utf-8;

#     client_max_body_size 75M; # Увеличиваем лимит на размер загружаемых файлов


#     # Блок для проксирования запросов к Gunicorn
#     location / {
#         proxy_pass http://web; # 'web' - это имя вашего сервиса Django в docker-compose
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_redirect off;
#     }

#     error_page 500 502 503 504 /500.html;
#     location = /500.html {
#         root /usr/share/nginx/html;
#     }
# }